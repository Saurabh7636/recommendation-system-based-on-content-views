{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "92e6898f-3805-48b8-a7e6-31c626800112",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "from scipy.sparse import csr_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "331490b0-3a83-4f18-989f-1911ba80deec",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the data\n",
    "users = pd.read_csv('data/user-old.csv')\n",
    "contents = pd.read_csv('data/contents.csv')\n",
    "views = pd.read_csv('data/content_views.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "c188a15f-4095-418d-98dc-a99d68edf191",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>portal_user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>aaa1b_old-199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>aaa1b-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>aaa1b-199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>aaa1b-201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aaa1b-202</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  portal_user_id\n",
       "0  aaa1b_old-199\n",
       "1        aaa1b-1\n",
       "2      aaa1b-199\n",
       "3      aaa1b-201\n",
       "4      aaa1b-202"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the data\n",
    "users.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "d46ab7ae-9dec-425f-8fc9-67e80c490c95",
   "metadata": {},
   "outputs": [],
   "source": [
    "contents=contents.drop_duplicates(subset=['global_id', 'entity_id', 'portal_name'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "46416b95-dc2e-4055-968b-f58d450e1157",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>global_id</th>\n",
       "      <th>entity_id</th>\n",
       "      <th>content_type</th>\n",
       "      <th>content_title</th>\n",
       "      <th>content_topic</th>\n",
       "      <th>portal_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>214</td>\n",
       "      <td>214</td>\n",
       "      <td>article</td>\n",
       "      <td>Introduction to Aging and Dementia</td>\n",
       "      <td>Brain Health</td>\n",
       "      <td>caac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>243</td>\n",
       "      <td>243</td>\n",
       "      <td>article</td>\n",
       "      <td>Delirium, Depression, and Apathy</td>\n",
       "      <td>Brain Health</td>\n",
       "      <td>caac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>284</td>\n",
       "      <td>284</td>\n",
       "      <td>article</td>\n",
       "      <td>Communication and Dementia</td>\n",
       "      <td>Brain Health</td>\n",
       "      <td>caac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>285</td>\n",
       "      <td>285</td>\n",
       "      <td>article</td>\n",
       "      <td>Sexuality and Dementia</td>\n",
       "      <td>Brain Health</td>\n",
       "      <td>caac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>332</td>\n",
       "      <td>332</td>\n",
       "      <td>article</td>\n",
       "      <td>Latest Research on Exercise and Brain Health</td>\n",
       "      <td>NaN</td>\n",
       "      <td>caac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   global_id  entity_id content_type  \\\n",
       "0        214        214      article   \n",
       "1        243        243      article   \n",
       "2        284        284      article   \n",
       "3        285        285      article   \n",
       "4        332        332      article   \n",
       "\n",
       "                                  content_title content_topic portal_name  \n",
       "0            Introduction to Aging and Dementia  Brain Health        caac  \n",
       "1              Delirium, Depression, and Apathy  Brain Health        caac  \n",
       "2                    Communication and Dementia  Brain Health        caac  \n",
       "3                        Sexuality and Dementia  Brain Health        caac  \n",
       "4  Latest Research on Exercise and Brain Health           NaN        caac  "
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the data\n",
    "contents.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "7d05df9e-9618-4292-a64f-34debaf87fab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>portal_user_id</th>\n",
       "      <th>global_id</th>\n",
       "      <th>entity_id</th>\n",
       "      <th>event_type</th>\n",
       "      <th>num_of_views</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>aaa1b-202</td>\n",
       "      <td>138.0</td>\n",
       "      <td>6</td>\n",
       "      <td>content_view</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>aaa1b-202</td>\n",
       "      <td>1161.0</td>\n",
       "      <td>555</td>\n",
       "      <td>content_view</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>aaa1b-202</td>\n",
       "      <td>1919.0</td>\n",
       "      <td>914</td>\n",
       "      <td>content_view</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>aaa1b-205</td>\n",
       "      <td>138.0</td>\n",
       "      <td>6</td>\n",
       "      <td>content_view</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>aaa1b-205</td>\n",
       "      <td>1919.0</td>\n",
       "      <td>914</td>\n",
       "      <td>content_view</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  portal_user_id  global_id  entity_id    event_type  num_of_views\n",
       "0      aaa1b-202      138.0          6  content_view             2\n",
       "1      aaa1b-202     1161.0        555  content_view             1\n",
       "2      aaa1b-202     1919.0        914  content_view             2\n",
       "3      aaa1b-205      138.0          6  content_view             9\n",
       "4      aaa1b-205     1919.0        914  content_view             4"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the data\n",
    "views.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5bde9f9a-3212-408c-8721-5438624b5be9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to extract portal name from portal_user_id\n",
    "def get_portal_name(user_id):\n",
    "    return user_id.split('-')[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "22ed2120-9da1-4ccf-86e6-a9e5a76e5cfb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to get recommendations\n",
    "def get_recommendations(user_id, num_recommendations=5):\n",
    "    portal_name = get_portal_name(user_id)\n",
    "    if not portal_name:\n",
    "        print(f\"No views found for user {user_id}. Cannot determine portal_name.\")\n",
    "        return None\n",
    "\n",
    "    # Filter contents and views by the identified portal_name\n",
    "    contents_filtered = contents[contents['portal_name'] == portal_name]\n",
    "    views_filtered = views[views['global_id'].isin(contents_filtered['global_id'])]\n",
    "\n",
    "    # Merge views with contents to get the necessary content details\n",
    "    views_filtered = views_filtered.merge(contents_filtered[['global_id', 'content_title']], on='global_id')\n",
    "\n",
    "    # Create user-content interaction matrix\n",
    "    user_content_matrix = views_filtered.pivot_table(index='portal_user_id', columns='content_title', values='num_of_views', fill_value=0)\n",
    "\n",
    "    # Convert the interaction matrix to a sparse matrix\n",
    "    sparse_user_content_matrix = csr_matrix(user_content_matrix.values)\n",
    "\n",
    "    # Compute cosine similarity between users\n",
    "    user_similarity = cosine_similarity(sparse_user_content_matrix)\n",
    "\n",
    "    # Convert similarity matrix to DataFrame for easier manipulation\n",
    "    user_similarity_df = pd.DataFrame(user_similarity, index=user_content_matrix.index, columns=user_content_matrix.index)\n",
    "\n",
    "    # Find similar users\n",
    "    similar_users = user_similarity_df[user_id].sort_values(ascending=False).index[1:]  # Exclude the user itself\n",
    "\n",
    "    # Get the content viewed by similar users\n",
    "    similar_users_views = user_content_matrix.loc[similar_users]\n",
    "\n",
    "    # Sum the views across similar users\n",
    "    similar_users_views_sum = similar_users_views.sum(axis=0)\n",
    "\n",
    "    # Remove contents the target user has already viewed\n",
    "    user_views = user_content_matrix.loc[user_id]\n",
    "    similar_users_views_sum = similar_users_views_sum[user_views == 0]\n",
    "\n",
    "    # Recommend the top N contents\n",
    "    recommendations = similar_users_views_sum.sort_values(ascending=False).head(num_recommendations)\n",
    "\n",
    "    # Merge with the contents dataframe to get additional details\n",
    "    recommended_contents = contents_filtered[contents_filtered['content_title'].isin(recommendations.index)]\n",
    "\n",
    "    # Return the recommendations with additional details\n",
    "    return recommended_contents[['global_id', 'entity_id', 'content_type', 'content_title', 'content_topic', 'portal_name']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "cf57c894-89d4-4c2b-9c07-3dbfd6c63501",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>global_id</th>\n",
       "      <th>entity_id</th>\n",
       "      <th>content_type</th>\n",
       "      <th>content_title</th>\n",
       "      <th>content_topic</th>\n",
       "      <th>portal_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1796</th>\n",
       "      <td>349</td>\n",
       "      <td>349</td>\n",
       "      <td>article</td>\n",
       "      <td>Teepa Snow: Normal, Not Normal</td>\n",
       "      <td>Featured Content</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2833</th>\n",
       "      <td>375</td>\n",
       "      <td>369</td>\n",
       "      <td>elearn</td>\n",
       "      <td>Emergency Planning Workbook</td>\n",
       "      <td>NaN</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3626</th>\n",
       "      <td>375</td>\n",
       "      <td>369</td>\n",
       "      <td>elearn</td>\n",
       "      <td>Emergency Planning Workbook</td>\n",
       "      <td>Featured Content</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8005</th>\n",
       "      <td>1186</td>\n",
       "      <td>528</td>\n",
       "      <td>article</td>\n",
       "      <td>5 Skills For Mobility &amp; Fall Prevention</td>\n",
       "      <td>NaN</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8222</th>\n",
       "      <td>1182</td>\n",
       "      <td>524</td>\n",
       "      <td>article</td>\n",
       "      <td>Our #1 Tip For Preventing Burnout</td>\n",
       "      <td>NaN</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11422</th>\n",
       "      <td>988</td>\n",
       "      <td>403</td>\n",
       "      <td>video</td>\n",
       "      <td>Communication Q&amp;A with Teepa Snow</td>\n",
       "      <td>NaN</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19673</th>\n",
       "      <td>1186</td>\n",
       "      <td>528</td>\n",
       "      <td>article</td>\n",
       "      <td>5 Skills For Mobility &amp; Fall Prevention</td>\n",
       "      <td>Mobility &amp; Fall Prevention</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22553</th>\n",
       "      <td>1182</td>\n",
       "      <td>524</td>\n",
       "      <td>article</td>\n",
       "      <td>Our #1 Tip For Preventing Burnout</td>\n",
       "      <td>Caregiver Wellness</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25140</th>\n",
       "      <td>988</td>\n",
       "      <td>403</td>\n",
       "      <td>video</td>\n",
       "      <td>Communication Q&amp;A with Teepa Snow</td>\n",
       "      <td>Communication Changes</td>\n",
       "      <td>kansas</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       global_id  entity_id content_type  \\\n",
       "1796         349        349      article   \n",
       "2833         375        369       elearn   \n",
       "3626         375        369       elearn   \n",
       "8005        1186        528      article   \n",
       "8222        1182        524      article   \n",
       "11422        988        403        video   \n",
       "19673       1186        528      article   \n",
       "22553       1182        524      article   \n",
       "25140        988        403        video   \n",
       "\n",
       "                                 content_title               content_topic  \\\n",
       "1796            Teepa Snow: Normal, Not Normal            Featured Content   \n",
       "2833               Emergency Planning Workbook                         NaN   \n",
       "3626               Emergency Planning Workbook            Featured Content   \n",
       "8005   5 Skills For Mobility & Fall Prevention                         NaN   \n",
       "8222         Our #1 Tip For Preventing Burnout                         NaN   \n",
       "11422        Communication Q&A with Teepa Snow                         NaN   \n",
       "19673  5 Skills For Mobility & Fall Prevention  Mobility & Fall Prevention   \n",
       "22553        Our #1 Tip For Preventing Burnout          Caregiver Wellness   \n",
       "25140        Communication Q&A with Teepa Snow       Communication Changes   \n",
       "\n",
       "      portal_name  \n",
       "1796       kansas  \n",
       "2833       kansas  \n",
       "3626       kansas  \n",
       "8005       kansas  \n",
       "8222       kansas  \n",
       "11422      kansas  \n",
       "19673      kansas  \n",
       "22553      kansas  \n",
       "25140      kansas  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Example: Get recommendations for a specific user\n",
    "get_recommendations('kansas-283')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e9ab7c4-a010-4064-b5bc-c5e6af410883",
   "metadata": {},
   "source": [
    "# Added age_range, gender, tags in the user data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "8864cb64-b306-4190-9f48-0b06c610c2c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "74dd9a70-7e06-401b-8bb0-aeaca17b2d7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "users = pd.read_csv('data/user.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6f019ead-ae0a-427d-8163-b95e79e9e912",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>portal_user_id</th>\n",
       "      <th>age_range</th>\n",
       "      <th>gender</th>\n",
       "      <th>tags</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>coaaa-190</td>\n",
       "      <td>60+</td>\n",
       "      <td>female</td>\n",
       "      <td>[\"Activities\", \"Aggression\", \"Agitation\", \"Anx...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>wisconsin-1266</td>\n",
       "      <td>46-60</td>\n",
       "      <td>female</td>\n",
       "      <td>[\"Bathing\", \"Fraud &amp; Scams\", \"Self-Care\"]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sarpc-184</td>\n",
       "      <td>60+</td>\n",
       "      <td>female</td>\n",
       "      <td>[\"Self-Care\"]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>wisconsin-50</td>\n",
       "      <td>18-25</td>\n",
       "      <td>male</td>\n",
       "      <td>[\"Abuse\", \"Aging\", \"Dementia &amp; Alzheimer's\", \"...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>wisconsin-93</td>\n",
       "      <td>36-45</td>\n",
       "      <td>female</td>\n",
       "      <td>[\"Activities\", \"Future Planning\", \"Moving &amp; Tr...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   portal_user_id age_range  gender  \\\n",
       "0       coaaa-190       60+  female   \n",
       "1  wisconsin-1266     46-60  female   \n",
       "2       sarpc-184       60+  female   \n",
       "3    wisconsin-50     18-25    male   \n",
       "4    wisconsin-93     36-45  female   \n",
       "\n",
       "                                                tags  \n",
       "0  [\"Activities\", \"Aggression\", \"Agitation\", \"Anx...  \n",
       "1          [\"Bathing\", \"Fraud & Scams\", \"Self-Care\"]  \n",
       "2                                      [\"Self-Care\"]  \n",
       "3  [\"Abuse\", \"Aging\", \"Dementia & Alzheimer's\", \"...  \n",
       "4  [\"Activities\", \"Future Planning\", \"Moving & Tr...  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "users.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "60070be9-5251-44f9-bd0e-5f04272867c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to preprocess tags\n",
    "def preprocess_tags(tag_string):\n",
    "    return json.loads(tag_string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "9ffbfc23-8999-424b-8211-6a57abfd204d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Preprocess user tags\n",
    "users['tags'] = users['tags'].apply(preprocess_tags)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "3cb018db-6822-4fd6-b5da-9eaa53113136",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a user attributes DataFrame\n",
    "user_attributes = users.set_index('portal_user_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "4d418f75-c7d4-4b27-a36a-cb37ce635ef0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_range</th>\n",
       "      <th>gender</th>\n",
       "      <th>tags</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>portal_user_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>coaaa-190</th>\n",
       "      <td>60+</td>\n",
       "      <td>female</td>\n",
       "      <td>[Activities, Aggression, Agitation, Anxiety, B...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wisconsin-1266</th>\n",
       "      <td>46-60</td>\n",
       "      <td>female</td>\n",
       "      <td>[Bathing, Fraud &amp; Scams, Self-Care]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sarpc-184</th>\n",
       "      <td>60+</td>\n",
       "      <td>female</td>\n",
       "      <td>[Self-Care]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wisconsin-50</th>\n",
       "      <td>18-25</td>\n",
       "      <td>male</td>\n",
       "      <td>[Abuse, Aging, Dementia &amp; Alzheimer's, Diabete...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wisconsin-93</th>\n",
       "      <td>36-45</td>\n",
       "      <td>female</td>\n",
       "      <td>[Activities, Future Planning, Moving &amp; Transfe...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age_range  gender  \\\n",
       "portal_user_id                     \n",
       "coaaa-190            60+  female   \n",
       "wisconsin-1266     46-60  female   \n",
       "sarpc-184            60+  female   \n",
       "wisconsin-50       18-25    male   \n",
       "wisconsin-93       36-45  female   \n",
       "\n",
       "                                                             tags  \n",
       "portal_user_id                                                     \n",
       "coaaa-190       [Activities, Aggression, Agitation, Anxiety, B...  \n",
       "wisconsin-1266                [Bathing, Fraud & Scams, Self-Care]  \n",
       "sarpc-184                                             [Self-Care]  \n",
       "wisconsin-50    [Abuse, Aging, Dementia & Alzheimer's, Diabete...  \n",
       "wisconsin-93    [Activities, Future Planning, Moving & Transfe...  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "user_attributes.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "401d66a9-fbcd-4095-9300-6da03d301ee6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to compute tag similarity\n",
    "def compute_tag_similarity(user_tags, other_tags):\n",
    "    return len(set(user_tags).intersection(set(other_tags))) / len(set(user_tags).union(set(other_tags)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "ee22cd17-62e6-4d3f-9d5b-a0a26001f55a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to compute user similarity based on attributes\n",
    "def compute_user_similarity(target_user_id, user_attributes):\n",
    "    target_user = user_attributes.loc[target_user_id]\n",
    "    similarities = {}\n",
    "\n",
    "    for user_id, attributes in user_attributes.iterrows():\n",
    "        if user_id == target_user_id:\n",
    "            continue\n",
    "\n",
    "        age_similarity = 1 if target_user['age_range'] == attributes['age_range'] else 0\n",
    "        gender_similarity = 1 if target_user['gender'] == attributes['gender'] else 0\n",
    "        tag_similarity = compute_tag_similarity(target_user['tags'], attributes['tags'])\n",
    "\n",
    "        # Weighted sum of similarities (adjust weights as necessary)\n",
    "        overall_similarity = 0.3 * age_similarity + 0.3 * gender_similarity + 0.4 * tag_similarity\n",
    "        similarities[user_id] = overall_similarity\n",
    "\n",
    "    return pd.Series(similarities)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "0755cfc2-bf71-4f46-b114-1f74bcd2f7d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to get recommendations\n",
    "def get_recommendations(user_id, num_recommendations=5):\n",
    "    portal_name = get_portal_name(user_id)\n",
    "\n",
    "    if not portal_name:\n",
    "        print(f\"No views found for user {user_id}. Cannot determine portal_name.\")\n",
    "        return None\n",
    "    \n",
    "    # Filter contents and views by the identified portal_name\n",
    "    contents_filtered = contents[contents['portal_name'] == portal_name]\n",
    "    views_filtered = views[views['global_id'].isin(contents_filtered['global_id'])]\n",
    "\n",
    "    # Merge views with contents to get the necessary content details\n",
    "    views_filtered = views_filtered.merge(contents_filtered[['global_id', 'content_title']], on='global_id')\n",
    "\n",
    "    # Create user-content interaction matrix\n",
    "    user_content_matrix = views_filtered.pivot_table(index='portal_user_id', columns='content_title', values='num_of_views', fill_value=0)\n",
    "\n",
    "    # Convert the interaction matrix to a sparse matrix\n",
    "    sparse_user_content_matrix = csr_matrix(user_content_matrix.values)\n",
    "\n",
    "    # Compute cosine similarity between users based on content views\n",
    "    user_similarity = cosine_similarity(sparse_user_content_matrix)\n",
    "\n",
    "    # Convert similarity matrix to DataFrame for easier manipulation\n",
    "    user_similarity_df = pd.DataFrame(user_similarity, index=user_content_matrix.index, columns=user_content_matrix.index)\n",
    "\n",
    "     # Check if the user exists in the similarity matrix\n",
    "    if user_id not in user_similarity_df.index:\n",
    "        print(f\"User {user_id} not found in similarity matrix.\")\n",
    "        return None\n",
    "\n",
    "    # Compute user similarity based on attributes\n",
    "    user_attr_similarity = compute_user_similarity(user_id, user_attributes)\n",
    "\n",
    "    # Combine similarities\n",
    "    combined_similarity = 0.5 * user_similarity_df.loc[user_id] + 0.5 * user_attr_similarity\n",
    "    combined_similarity = combined_similarity.dropna().sort_values(ascending=False)\n",
    "\n",
    "    # Find similar users\n",
    "    similar_users = combined_similarity.index[:10]  # Take top 10 similar users for example\n",
    "\n",
    "    # Get the content viewed by similar users\n",
    "    similar_users_views = user_content_matrix.loc[similar_users]\n",
    "\n",
    "    # Sum the views across similar users\n",
    "    similar_users_views_sum = similar_users_views.sum(axis=0)\n",
    "\n",
    "    # Remove contents the target user has already viewed\n",
    "    if user_id in user_content_matrix.index:\n",
    "        user_views = user_content_matrix.loc[user_id]\n",
    "        similar_users_views_sum = similar_users_views_sum[user_views == 0]\n",
    "\n",
    "    # Recommend the top N contents\n",
    "    recommendations = similar_users_views_sum.sort_values(ascending=False).head(num_recommendations)\n",
    "\n",
    "    # Merge with the contents dataframe to get additional details\n",
    "    recommended_contents = contents_filtered[contents_filtered['content_title'].isin(recommendations.index)]\n",
    "\n",
    "    # Return the recommendations with additional details\n",
    "    return recommended_contents[['global_id', 'entity_id', 'content_type', 'content_title', 'content_topic', 'portal_name']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "b8f85caa-bda6-4174-9990-05516dab682d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>global_id</th>\n",
       "      <th>entity_id</th>\n",
       "      <th>content_type</th>\n",
       "      <th>content_title</th>\n",
       "      <th>content_topic</th>\n",
       "      <th>portal_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24327</th>\n",
       "      <td>375</td>\n",
       "      <td>369</td>\n",
       "      <td>elearn</td>\n",
       "      <td>Emergency Planning Workbook</td>\n",
       "      <td>NaN</td>\n",
       "      <td>aaa1b</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25064</th>\n",
       "      <td>1534</td>\n",
       "      <td>773</td>\n",
       "      <td>article</td>\n",
       "      <td>How To Recover From Burnout: A Guide For Careg...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>aaa1b</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26403</th>\n",
       "      <td>322</td>\n",
       "      <td>322</td>\n",
       "      <td>article</td>\n",
       "      <td>Reframing Negative Thoughts</td>\n",
       "      <td>Caregiver Wellness</td>\n",
       "      <td>aaa1b</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26947</th>\n",
       "      <td>986</td>\n",
       "      <td>423</td>\n",
       "      <td>elearn</td>\n",
       "      <td>Trualta Companion Cards</td>\n",
       "      <td>NaN</td>\n",
       "      <td>aaa1b</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32097</th>\n",
       "      <td>1214</td>\n",
       "      <td>564</td>\n",
       "      <td>article</td>\n",
       "      <td>Missing Doses &amp; Medication Mistakes</td>\n",
       "      <td>Medications</td>\n",
       "      <td>aaa1b</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       global_id  entity_id content_type  \\\n",
       "24327        375        369       elearn   \n",
       "25064       1534        773      article   \n",
       "26403        322        322      article   \n",
       "26947        986        423       elearn   \n",
       "32097       1214        564      article   \n",
       "\n",
       "                                           content_title       content_topic  \\\n",
       "24327                        Emergency Planning Workbook                 NaN   \n",
       "25064  How To Recover From Burnout: A Guide For Careg...                 NaN   \n",
       "26403                        Reframing Negative Thoughts  Caregiver Wellness   \n",
       "26947                            Trualta Companion Cards                 NaN   \n",
       "32097                Missing Doses & Medication Mistakes         Medications   \n",
       "\n",
       "      portal_name  \n",
       "24327       aaa1b  \n",
       "25064       aaa1b  \n",
       "26403       aaa1b  \n",
       "26947       aaa1b  \n",
       "32097       aaa1b  "
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Example: Get recommendations for a specific user\n",
    "user_id = 'aaa1b-207'\n",
    "get_recommendations(user_id)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
